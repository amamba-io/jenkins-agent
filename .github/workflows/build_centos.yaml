name: Build Jenkins Agent Of CentOS (Deprecated Images)
on:
  workflow_call:
    inputs:
      container_tag:
        description: 'Container Tag'
        required: true
        type: string
      platforms:
        description: 'Platforms'
        required: true
        type: string

jobs:
  build-agent-nodejs:
    strategy:
      matrix:
        runtime: [ docker, podman ]
        version: [ "16.17.0"]
    runs-on: ubuntu-24.04
    env:
      os: centos
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Login to ghcr.io
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: init variables
        id: step-variable
        run: |
          export "runtime=$([ ${{ matrix.runtime }} == podman ] && (echo -podman))"
          echo "runtime=${runtime}" >> $GITHUB_OUTPUT
          export "nodejsVersion=$( echo -${{ matrix.version }})"
          echo "suffix=${nodejsVersion}${runtime}" >> $GITHUB_OUTPUT
      - name: use setup-buildx-action
        uses: docker/setup-buildx-action@v3
      - name: build jenkins agent with nodejs
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./jenkins-agent/nodejs/Dockerfile
          github-token: ${{ secrets.GITHUB_TOKEN }}
          push: true
          provenance: false
          platforms: ${{ inputs.platforms }}
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/jenkins-agent-nodejs:${{ inputs.container_tag }}${{ steps.step-variable.outputs.suffix }}
            ${{ secrets.DOCKER_USERNAME }}/jenkins-agent-nodejs:latest${{ steps.step-variable.outputs.suffix }}
          build-args: |
            REGISTRY_REPO=${{ secrets.DOCKER_USERNAME }}
            RUNTIME=${{ steps.step-variable.outputs.runtime }}
            VERSION=${{ matrix.version }}
            DISTRIBUTION=${{ env.os }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-agent-python:
    strategy:
      matrix:
        runtime: [ docker, podman ]
        version: [ "3.8.19" ]
    runs-on: ubuntu-24.04
    env:
      os: centos
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Login to ghcr.io
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: init variables
        id: step-variable
        run: |
          export "runtime=$([ ${{ matrix.runtime }} == podman ] && (echo -podman))"
          echo "runtime=${runtime}" >> $GITHUB_OUTPUT
          export "pythonVersion=$( echo -${{ matrix.version }})"
          echo "suffix=${pythonVersion}${runtime}" >> $GITHUB_OUTPUT
      - name: use setup-buildx-action
        uses: docker/setup-buildx-action@v3
      - name: build jenkins agent with python
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./jenkins-agent/python/Dockerfile
          github-token: ${{ secrets.GITHUB_TOKEN }}
          push: true
          provenance: false
          platforms: ${{ inputs.platforms }}
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/jenkins-agent-python:${{ inputs.container_tag }}${{ steps.step-variable.outputs.suffix }}
            ${{ secrets.DOCKER_USERNAME }}/jenkins-agent-python:latest${{ steps.step-variable.outputs.suffix }}
          build-args: |
            REGISTRY_REPO=${{ secrets.DOCKER_USERNAME }}
            RUNTIME=${{ steps.step-variable.outputs.runtime }}
            VERSION=${{ matrix.version }}
            DISTRIBUTION=${{ env.os }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-agent-go:
    strategy:
      matrix:
        runtime: [ docker, podman ]
        version: [ "1.17.13" ]
    runs-on: ubuntu-24.04
    env:
      os: centos
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Login to ghcr.io
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: init variables
        id: step-variable
        run: |
          export "runtime=$([ ${{ matrix.runtime }} == podman ] && (echo -podman))"
          echo "runtime=${runtime}" >> $GITHUB_OUTPUT
          export "goVersion=$( echo -${{ matrix.version }})"
          echo "suffix=${goVersion}${runtime}" >> $GITHUB_OUTPUT
      - name: use setup-buildx-action
        uses: docker/setup-buildx-action@v3
      - name: build jenkins agent with go
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./jenkins-agent/go/Dockerfile
          github-token: ${{ secrets.GITHUB_TOKEN }}
          push: true
          provenance: false
          platforms: ${{ inputs.platforms }}
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/jenkins-agent-go:${{ inputs.container_tag }}${{ steps.step-variable.outputs.suffix }}
            ${{ secrets.DOCKER_USERNAME }}/jenkins-agent-go:latest${{ steps.step-variable.outputs.suffix }}
          build-args: |
            REGISTRY_REPO=${{ secrets.DOCKER_USERNAME }}
            RUNTIME=${{ steps.step-variable.outputs.runtime }}
            VERSION=${{ matrix.version }}
            DISTRIBUTION=${{ env.os }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-agent-maven:
    strategy:
      matrix:
        runtime: [ docker, podman ]
        version: [ 8, 11 ]
    runs-on: ubuntu-24.04
    env:
      os: centos
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Login to ghcr.io
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: init variables
        id: step-variable
        run: |
          if [ "${{ matrix.version }}" == "8" ]; then
            export "jdkVersion=-jdk1.8"
            export "javaVersion=1.8.0"
          else
            export "jdkVersion=$(echo -jdk${{ matrix.version }})"
            export "javaVersion=${{ matrix.version }}"
          fi
          echo "javaVersion=${javaVersion}" >> $GITHUB_OUTPUT
          export "runtime=$([ ${{ matrix.runtime }} == podman ] && (echo -podman))"
          echo "runtime=${runtime}" >> $GITHUB_OUTPUT
          echo "suffix=${jdkVersion}${runtime}" >> $GITHUB_OUTPUT
      - name: use setup-buildx-action
        uses: docker/setup-buildx-action@v3
      - name: build jenkins agent with maven
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./jenkins-agent/maven/Dockerfile
          github-token: ${{ secrets.GITHUB_TOKEN }}
          push: true
          provenance: false
          platforms: ${{ inputs.platforms }}
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/jenkins-agent-maven:${{ inputs.container_tag }}${{ steps.step-variable.outputs.suffix }}
            ${{ secrets.DOCKER_USERNAME }}/jenkins-agent-maven:latest${{ steps.step-variable.outputs.suffix }}
          build-args: |
            REGISTRY_REPO=${{ secrets.DOCKER_USERNAME }}
            RUNTIME=${{ steps.step-variable.outputs.runtime }}
            JAVA_VERSION=${{ steps.step-variable.outputs.javaVersion }}
            DISTRIBUTION=${{ env.os }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
