name: Build Images Of AMD
on:
  workflow_call:
    inputs:
      container_tag:
        description: 'Container Tag'
        required: true
        type: string
      platforms:
        description: 'Platform'
        required: false
        type: string
        default: linux/amd64,linux/arm64

jobs:
  # why doesn't the jenkins build differentiate between runners? on the ARM runner, there are segmentation faults in memory.
  # see log: https://github.com/amamba-io/jenkins-agent/actions/runs/13298553507/job/37136401220
  # currently, building Jenkins images across platforms takes about half an hour, while building only for the AMD platform takes 15 minutes.
  build-jenkins:
    runs-on: ubuntu-24.04
    env:
      JENKINS-VERSION: 2.502
      INBOUND-AGENT-VERSION: jdk21
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: use-setup-buildx-action
        uses: docker/setup-buildx-action@v3
      - name: login
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: sync jnlp image
        run: skopeo copy -f oci --multi-arch all docker://docker.io/jenkins/inbound-agent:${{ env.INBOUND-AGENT-VERSION }} docker://ghcr.io/${{ github.repository_owner }}/inbound-agent:${{ env.INBOUND-AGENT-VERSION }}
      - name: build jenkins
        uses: docker/build-push-action@v6
        with:
          context: ./
          file: ./Dockerfile
          github-token: ${{ secrets.GITHUB_TOKEN }}
          push: true
          provenance: false
          platforms: ${{ inputs.platforms }}
          tags: |
            ghcr.io/${{ github.repository_owner }}/jenkins:${{ inputs.container_tag }}-${{ env.JENKINS-VERSION }}
            ghcr.io/${{ github.repository_owner }}/jenkins:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Convert Image to OCI Format
        run: |
          skopeo copy -f oci  --multi-arch all --retry-times 3 docker://ghcr.io/${{ github.repository_owner }}/jenkins:${{ inputs.container_tag }}-${{ env.JENKINS-VERSION }} docker://ghcr.io/${{ github.repository_owner }}/jenkins:${{ inputs.container_tag }}-${{ env.JENKINS-VERSION }}
          skopeo copy -f oci  --multi-arch all --retry-times 3 docker://ghcr.io/${{ github.repository_owner }}/jenkins:latest docker://ghcr.io/${{ github.repository_owner }}/jenkins:latest
          
          skopeo inspect docker://ghcr.io/${{ github.repository_owner }}/jenkins:${{ inputs.container_tag }}-${{ env.JENKINS-VERSION }} | jq ".LayersData[0].MIMEType" | grep "oci" || {  echo "Error: ghcr.io/${{ github.repository_owner }}/jenkins:${{ inputs.container_tag }}-${{ env.JENKINS-VERSION }} is not in oci format" ; exit 1 ;}
          skopeo inspect docker://ghcr.io/${{ github.repository_owner }}/jenkins:latest | jq ".LayersData[0].MIMEType" | grep "oci" || { echo "Error: ghcr.io/${{ github.repository_owner }}/jenkins:latest is not in oci format" ; exit 1 ;}