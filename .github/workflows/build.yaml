name: Build Images
on:
  pull_request_target:
  push:
    tags:
      - v[0-9]+.[0-9]+.[0-9]+
      - v[0-9]+.[0-9]+.[0-9]+-rc[0-9]+
  workflow_dispatch
  
jobs:
  init-variable:
    runs-on: ubuntu-latest
    outputs:
      container_tag: ${{ steps.init_variable.outputs.container_tag }}
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: output environment variable
        id: init_variable
        run: |
          echo container_tag=$(git describe --tags --abbrev=8) >> $GITHUB_OUTPUT

  build-jenkins:
    permissions:
      contents: read
      packages: write
    needs: init-variable
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: use-setup-buildx-action
        uses: docker/setup-buildx-action@v2
      - name: login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: build jenkins
        uses: docker/build-push-action@v4.1.1
        with:
          context: ./
          file: ./Dockerfile
          github-token: ${{ secrets.GITHUB_TOKEN }}
          push: true
          provenance: false
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/jenkins:${{ needs.init-variable.outputs.container_tag }}-2.413
            ${{ secrets.DOCKER_USERNAME }}/jenkins:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-jenkins-agent-base:
    permissions:
      contents: read
      packages: write
    needs: init-variable
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Login to ghcr.io
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: use setup-buildx-action
        uses: docker/setup-buildx-action@v2
      - name: build jenkins agent with docker
        uses: docker/build-push-action@v4.1.1
        with:
          context: ./jenkins-agent/base
          file: ./jenkins-agent/base/Dockerfile
          github-token: ${{ secrets.GITHUB_TOKEN }}
          push: true
          provenance: false
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/jenkins-agent-base:${{ needs.init-variable.outputs.container_tag }}
            ${{ secrets.DOCKER_USERNAME }}/jenkins-agent-base:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: build jenkins agent with podman
        uses: docker/build-push-action@v4.1.1
        with:
          context: ./jenkins-agent/base
          file: ./jenkins-agent/base/podman/Dockerfile
          github-token: ${{ secrets.GITHUB_TOKEN }}
          push: true
          provenance: false
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/jenkins-agent-base:${{ needs.init-variable.outputs.container_tag }}-podman
            ${{ secrets.DOCKER_USERNAME }}/jenkins-agent-base:latest-podman
          build-args: |
            REGISTRY_REPO=${{ secrets.DOCKER_USERNAME }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-agents:
    needs: [build-jenkins-agent-base, init-variable]
    strategy:
      matrix:
        runtime: [docker, podman]
        agent: [python, go, nodejs]
      include:
        - agent: nodejs
          version: 16.17.0
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Login to ghcr.io
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: init variables
        id: step-variable
        run: |
          echo "suffix=$([ ${{ matrix.runtime }} == podman ] && (echo -podman))" >> $GITHUB_OUTPUT
          echo "image=jenkins-agent-${{ matrix.agent }}" >> $GITHUB_OUTPUT
      - name: use setup-buildx-action
        uses: docker/setup-buildx-action@v2
      - name: build jenkins agent with golang
        uses: docker/build-push-action@v4.1.1
        with:
          context: ./jenkins-agent/
          file: ./jenkins-agent/go/Dockerfile
          github-token: ${{ secrets.GITHUB_TOKEN }}
          push: true
          provenance: false
          platforms: linux/amd64,linux/arm64
          tags: |
            # amambadev/jenkins-agent-go:v0.2.1-podman
            ${{ secrets.DOCKER_USERNAME }}/${{ steps.step-variable.outputs.suffix }}:${{ needs.init-variable.outputs.container_tag }}${{ steps.step-variable.outputs.suffix }}
            ${{ secrets.DOCKER_USERNAME }}/${{ steps.step-variable.outputs.suffix }}:latest${{ steps.step-variable.outputs.suffix }}
          build-args: |
            REGISTRY_REPO=${{ secrets.DOCKER_USERNAME }}
            RUNTIME=${{ steps.step-variable.outputs.suffix }}
            VERSION=${{ matrix.version }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-agent-maven:
    needs: [ build-jenkins-agent-base, init-variable ]
    strategy:
      matrix:
        runtime: [docker, podman]
        version: [1.8.0, 11]
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Login to ghcr.io
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: init variables
        id: step-variable
        run: |
          echo "suffix=$([ ${{ matrix.version }} == 1.8.0 ] && (echo -jdk1.8) || (echo -jdk11) )"
          echo "suffix=${suffix}$([ ${{ matrix.runtime }} == podman ] && (echo -podman))" >> $GITHUB_OUTPUT
      - name: use setup-buildx-action
        uses: docker/setup-buildx-action@v2
      - name: build jenkins agent with maven
        uses: docker/build-push-action@v4.1.1
        with:
          context: ./jenkins-agent/maven
          file: ./jenkins-agent/maven/Dockerfile
          github-token: ${{ secrets.GITHUB_TOKEN }}
          push: true
          provenance: false
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/jenkins-agent-maven:${{ needs.init-variable.outputs.container_tag }}${{ steps.step-variable.outputs.suffix }}
            ${{ secrets.DOCKER_USERNAME }}/jenkins-agent-maven:latest${{ steps.step-variable.outputs.suffix }}
          build-args: |
            REGISTRY_REPO=${{ secrets.DOCKER_USERNAME }}
            RUNTIME=${{ steps.step-variable.outputs.suffix }}
            JAVA_VERSION=${{ matrix.version }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
